version: '3.4'

networks:
  app:
    driver: "bridge"

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    hostname: "nginx"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf:ro
      - ./ssl/localhost.crt:/etc/ssl/certs/localhost.crt:ro
      - ./ssl/localhost.key:/etc/ssl/certs/localhost.key:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      app:
        aliases:
          - "nginx"
    depends_on:
      - web

  bot.datastore:
    image: ${DOCKER_REGISTRY-}botdatastore
    build:
      context: ..
      dockerfile: src/Bot.DataStore/Dockerfile
    volumes:
      - ./db:/app/db
    networks:
      app:
        aliases:
          - "datastore"

#  bot.telegramworker:
#    image: ${DOCKER_REGISTRY-}bottelegramworker
#    build:
#      context: ..
#      dockerfile: src/Bot.TelegramWorker/Dockerfile
#    environment:
#      - DOTNET_BOT_API_KEY=430705700:AAEttDAv7-q5qBrRJViI0t_Qb7zjzx9guwI
#      - DOTNET_ALLOWED_USERS=Py6jlb||ahfksdfsd||sdfjkhsdkfjh
#      - DOTNET_BOT_DATA_STORE_ENDPOINT=https://datastore123
#    networks:
#      app:
#        aliases:
#          - "bot_worker"
#    depends_on:
#      - "bot.datastore"

  web:
    container_name: web
    image: ${DOCKER_REGISTRY-}web
    build:
      context: ..
      dockerfile: src/Bot.UI/Server/Dockerfile
    environment:
      - ASPNETCORE_USE_REVERSE_PROXY=true
      - ASPNETCORE_SUBDIR=/web
      - ASPNETCORE_ISSUER_URI=https://localhost/web
    networks:
      app:
    volumes:
      - "../src/Bot.UI/Server/db:/app/db"